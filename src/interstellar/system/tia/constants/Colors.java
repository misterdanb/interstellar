/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @author db1992
 */

package interstellar.system.tia.constants;

import static interstellar.system.tia.constants.Video.*;

public final class Colors
{
    // NTSC-COLORS
    public static final int NTSC[] =
    {
        // 0x0?
        0x000000, 0x000000, // 0x00, 0x01
        0x404040, 0x404040, // 0x02, 0x03
        0x6C6C6C, 0x6C6C6C, // 0x04, 0x05
        0x909090, 0x909090, // 0x06, 0x07
        0xB0B0B0, 0xB0B0B0, // 0x08, 0x09
        0xC8C8C8, 0xC8C8C8, // 0x0A, 0x0B
        0xDCDCDC, 0xDCDCDC, // 0x0C, 0x0D
        0xECECEC, 0xECECEC, // 0x0E, 0x0F

        // 0x1?
        0x444400, 0x444400, // 0x10, 0x11
        0x646410, 0x646410, // 0x12, 0x13
        0x848424, 0x848424, // 0x14, 0x15
        0xA0A034, 0xA0A034, // 0x16, 0x17
        0xB8B840, 0xB8B840, // 0x18, 0x19
        0xD0D050, 0xD0D050, // 0x1A, 0x1B
        0xE8E85C, 0xE8E85C, // 0x1C, 0x1D
        0xFCFC68, 0xFCFC68, // 0x1E, 0x1F

        // 0x2?
        0x702800, 0x702800, // 0x20, 0x21
        0x844414, 0x844414, // 0x22, 0x23
        0x985C28, 0x985C28, // 0x24, 0x25
        0xAC783C, 0xAC783C, // 0x26, 0x27
        0xBC8C4C, 0xBC8C4C, // 0x28, 0x29
        0xCCA05C, 0xCCA05C, // 0x2A, 0x2B
        0xDCB468, 0xDCB468, // 0x2C, 0x2D
        0xECC878, 0xECC878, // 0x2E, 0x2F

        // 0x3?
        0x841800, 0x841800, // 0x30, 0x31
        0x983418, 0x983418, // 0x32, 0x33
        0xAC5030, 0xAC5030, // 0x34, 0x35
        0xC06848, 0xC06848, // 0x36, 0x37
        0xD0805C, 0xD0805C, // 0x38, 0x39
        0xE09470, 0xE09470, // 0x3A, 0x3B
        0xECA880, 0xECA880, // 0x3C, 0x3D
        0xFCBC94, 0xFCBC94, // 0x3E, 0x3F

        // 0x4?
        0x880000, 0x880000, // 0x40, 0x41
        0x9C2020, 0x9C2020, // 0x42, 0x43
        0xB03C3C, 0xB03C3C, // 0x44, 0x45
        0xC05858, 0xC05858, // 0x46, 0x47
        0xD07070, 0xD07070, // 0x48, 0x49
        0xE08888, 0xE08888, // 0x4A, 0x4B
        0xECA0A0, 0xECA0A0, // 0x4C, 0x4D
        0xFCB4B4, 0xFCB4B4, // 0x4E, 0x4F

        // 0x5?
        0x78005C, 0x78005C, // 0x50, 0x51
        0x8C2074, 0x8C2074, // 0x52, 0x53
        0xA03C88, 0xA03C88, // 0x54, 0x55
        0xB0589C, 0xB0589C, // 0x56, 0x57
        0xC070B0, 0xC070B0, // 0x58, 0x59
        0xD084C0, 0xD084C0, // 0x5A, 0x5B
        0xDC9CD0, 0xDC9CD0, // 0x5C, 0x5D
        0xECB0E0, 0xECB0E0, // 0x5E, 0x5F

        // 0x6?
        0x480078, 0x480078, // 0x60, 0x61
        0x602090, 0x602090, // 0x62, 0x63
        0x783CA4, 0x783CA4, // 0x64, 0x65
        0x8C58B8, 0x8C58B8, // 0x66, 0x67
        0xA070CC, 0xA070CC, // 0x68, 0x69
        0xB484DC, 0xB484DC, // 0x6A, 0x6B
        0xC49CEC, 0xC49CEC, // 0x6C, 0x6D
        0xD4B0FC, 0xD4B0FC, // 0x6E, 0x6F

        // 0x7?
        0x140084, 0x140084, // 0x70, 0x71
        0x302098, 0x302098, // 0x72, 0x73
        0x4C3CAC, 0x4C3CAC, // 0x74, 0x75
        0x6858C0, 0x6858C0, // 0x76, 0x77
        0x7C70D0, 0x7C70D0, // 0x78, 0x79
        0x9488E0, 0x9488E0, // 0x7A, 0x7B
        0xA8A0EC, 0xA8A0EC, // 0x7C, 0x7D
        0xBCB4FC, 0xBCB4FC, // 0x7E, 0x7F

        // 0x8?
        0x000088, 0x000088, // 0x80, 0x81
        0x1C209C, 0x1C209C, // 0x82, 0x83
        0x3840B0, 0x3840B0, // 0x84, 0x85
        0x505CC0, 0x505CC0, // 0x86, 0x87
        0x6874D0, 0x6874D0, // 0x88, 0x89
        0x7C8CE0, 0x7C8CE0, // 0x8A, 0x8B
        0x90A4EC, 0x90A4EC, // 0x8C, 0x8D
        0xA4B8FC, 0xA4B8FC, // 0x8E, 0x8F

        // 0x9?
        0x00187C, 0x00187C, // 0x90, 0x91
        0x1C3890, 0x1C3890, // 0x92, 0x93
        0x3854A8, 0x3854A8, // 0x94, 0x95
        0x5070BC, 0x5070BC, // 0x96, 0x97
        0x6888CC, 0x6888CC, // 0x98, 0x99
        0x7C9CDC, 0x7C9CDC, // 0x9A, 0x9B
        0x90B4EC, 0x90B4EC, // 0x9C, 0x9D
        0xA4C8FC, 0xA4C8FC, // 0x9E, 0x9F

        // 0xA?
        0x002C5C, 0x002C5C, // 0xA0, 0xA1
        0x1C4C78, 0x1C4C78, // 0xA2, 0xA3
        0x386890, 0x386890, // 0xA4, 0xA5
        0x5084AC, 0x5084AC, // 0xA6, 0xA7
        0x689CC0, 0x689CC0, // 0xA8, 0xA9
        0x7CB4D4, 0x7CB4D4, // 0xAA, 0xAB
        0x90CCE8, 0x90CCE8, // 0xAC, 0xAD
        0xA4E0FC, 0xA4E0FC, // 0xAE, 0xAF

        // 0xB?
        0x003C2C, 0x003C2C, // 0xB0, 0xB1
        0x1C5C48, 0x1C5C48, // 0xB2, 0xB3
        0x387C64, 0x387C64, // 0xB4, 0xB5
        0x509C80, 0x509C80, // 0xB6, 0xB7
        0x68B494, 0x68B494, // 0xB8, 0xB9
        0x7CD0AC, 0x7CD0AC, // 0xBA, 0xBB
        0x90E4C0, 0x90E4C0, // 0xBC, 0xBD
        0xA4FCD4, 0xA4FCD4, // 0xBE, 0xBF

        // 0xC?
        0x003C00, 0x003C00, // 0xC0, 0xC1
        0x205C20, 0x205C20, // 0xC2, 0xC3
        0x407C40, 0x407C40, // 0xC4, 0xC5
        0x5C9C5C, 0x5C9C5C, // 0xC6, 0xC7
        0x74B474, 0x74B474, // 0xC8, 0xC9
        0x8CD08C, 0x8CD08C, // 0xCA, 0xCB
        0xA4E4A4, 0xA4E4A4, // 0xCC, 0xCD
        0xB8FCB8, 0xB8FCB8, // 0xCE, 0xCF

        // 0xD?
        0x143800, 0x143800, // 0xD0, 0xD1
        0x345C1C, 0x345C1C, // 0xD2, 0xD3
        0x507C38, 0x507C38, // 0xD4, 0xD5
        0x6C9850, 0x6C9850, // 0xD6, 0xD7
        0x84B468, 0x84B468, // 0xD8, 0xD9
        0x9CCC7C, 0x9CCC7C, // 0xDA, 0xDB
        0xB4E490, 0xB4E490, // 0xDC, 0xDD
        0xC8FCA4, 0xC8FCA4, // 0xDE, 0xDF

        // 0xE?
        0x2C3000, 0x2C3000, // 0xE0, 0xE1
        0x4C501C, 0x4C501C, // 0xE2, 0xE3
        0x687034, 0x687034, // 0xE4, 0xE5
        0x848C4C, 0x848C4C, // 0xE6, 0xE7
        0x9CA864, 0x9CA864, // 0xE8, 0xE9
        0xB4C078, 0xB4C078, // 0xEA, 0xEB
        0xCCD488, 0xCCD488, // 0xEC, 0xED
        0xE0EC9C, 0xE0EC9C, // 0xEE, 0xEF

        // 0xF?
        0x442800, 0x442800, // 0xF0, 0xF1
        0x644818, 0x644818, // 0xF2, 0xF3
        0x846830, 0x846830, // 0xF4, 0xF5
        0xA08444, 0xA08444, // 0xF6, 0xF7
        0xB89C58, 0xB89C58, // 0xF8, 0xF9
        0xD0B46C, 0xD0B46C, // 0xFA, 0xFB
        0xE8CC7C, 0xE8CC7C, // 0xFC, 0xFD
        0xFCE08C, 0xFCE08C  // 0xFE, 0xFF
    };

    // PAL-COLORS
    public static final int PAL[] =
    {
        // 0x0?
        0x000000, 0x000000, // 0x00, 0x01
        0x282828, 0x282828, // 0x02, 0x03
        0x505050, 0x505050, // 0x04, 0x05
        0x747474, 0x747474, // 0x06, 0x07
        0x949494, 0x949494, // 0x08, 0x09
        0xB4B4B4, 0xB4B4B4, // 0x0A, 0x0B
        0xD0D0D0, 0xD0D0D0, // 0x0C, 0x0D
        0xECECEC, 0xECECEC, // 0x0E, 0x0F

        // 0x1?
        0x000000, 0x000000, // 0x10, 0x11
        0x282828, 0x282828, // 0x12, 0x13
        0x505050, 0x505050, // 0x14, 0x15
        0x747474, 0x747474, // 0x16, 0x17
        0x949494, 0x949494, // 0x18, 0x19
        0xB4B4B4, 0xB4B4B4, // 0x1A, 0x1B
        0xD0D0D0, 0xD0D0D0, // 0x1C, 0x1D
        0xECECEC, 0xECECEC, // 0x1E, 0x1F

        // 0x2?
        0x805800, 0x805800, // 0x20, 0x21
        0x947020, 0x947020, // 0x22, 0x23
        0xA8843C, 0xA8843C, // 0x24, 0x25
        0xBC9C58, 0xBC9C58, // 0x26, 0x27
        0xCCAC70, 0xCCAC70, // 0x28, 0x29
        0xDCC084, 0xDCC084, // 0x2A, 0x2B
        0xECD09C, 0xECD09C, // 0x2C, 0x2D
        0xFCE0B0, 0xFCE0B0, // 0x2E, 0x2F

        // 0x3?
        0x445C00, 0x445C00, // 0x30, 0x31
        0x5C7820, 0x5C7820, // 0x32, 0x33
        0x74903C, 0x74903C, // 0x34, 0x35
        0x8CAC58, 0x8CAC58, // 0x36, 0x37
        0xA0C070, 0xA0C070, // 0x38, 0x39
        0xB0D484, 0xB0D484, // 0x3A, 0x3B
        0xC4E89C, 0xC4E89C, // 0x3C, 0x3D
        0xD4FCB0, 0xD4FCB0, // 0x3E, 0x3F

        // 0x4?
        0x703400, 0x703400, // 0x40, 0x41
        0x885020, 0x885020, // 0x42, 0x43
        0xA0683C, 0xA0683C, // 0x44, 0x45
        0xB48458, 0xB48458, // 0x46, 0x47
        0xC89870, 0xC89870, // 0x48, 0x49
        0xDCAC84, 0xDCAC84, // 0x4A, 0x4B
        0xECC09C, 0xECC09C, // 0x4C, 0x4D
        0xFCD4B0, 0xFCD4B0, // 0x4E, 0x4F

        // 0x5?
        0x006414, 0x006414, // 0x50, 0x51
        0x208034, 0x208034, // 0x52, 0x53
        0x3C9850, 0x3C9850, // 0x54, 0x55
        0x58B06C, 0x58B06C, // 0x56, 0x57
        0x70C484, 0x70C484, // 0x58, 0x59
        0x84D89C, 0x84D89C, // 0x5A, 0x5B
        0x9CE8B4, 0x9CE8B4, // 0x5C, 0x5D
        0xB0FCC8, 0xB0FCC8, // 0x5E, 0x5F

        // 0x6?
        0x700014, 0x700014, // 0x60, 0x61
        0x882034, 0x882034, // 0x62, 0x63
        0xA03C50, 0xA03C50, // 0x64, 0x65
        0xB4586C, 0xB4586C, // 0x66, 0x67
        0xC87084, 0xC87084, // 0x68, 0x69
        0xDC849C, 0xDC849C, // 0x6A, 0x6B
        0xEC9CB4, 0xEC9CB4, // 0x6C, 0x6D
        0xFCB0C8, 0xFCB0C8, // 0x6E, 0x6F

        // 0x7?
        0x005C5C, 0x005C5C, // 0x70, 0x71
        0x207474, 0x207474, // 0x72, 0x73
        0x3C8C8C, 0x3C8C8C, // 0x74, 0x75
        0x58A4A4, 0x58A4A4, // 0x76, 0x77
        0x70B8B8, 0x70B8B8, // 0x78, 0x79
        0x84C8C8, 0x84C8C8, // 0x7A, 0x7B
        0x9CDCDC, 0x9CDCDC, // 0x7C, 0x7D
        0xB0ECEC, 0xB0ECEC, // 0x7E, 0x7F

        // 0x8?
        0x70005C, 0x70005C, // 0x80, 0x81
        0x842074, 0x842074, // 0x82, 0x83
        0x943C88, 0x943C88, // 0x84, 0x85
        0xA8589C, 0xA8589C, // 0x86, 0x87
        0xB470B0, 0xB470B0, // 0x88, 0x89
        0xC484C0, 0xC484C0, // 0x8A, 0x8B
        0xD09CD0, 0xD09CD0, // 0x8C, 0x8D
        0xE0B0E0, 0xE0B0E0, // 0x8E, 0x8F

        // 0x9?
        0x003C70, 0x003C70, // 0x90, 0x91
        0x1C5888, 0x1C5888, // 0x92, 0x93
        0x3874A0, 0x3874A0, // 0x94, 0x95
        0x508CB4, 0x508CB4, // 0x96, 0x97
        0x68A4C8, 0x68A4C8, // 0x98, 0x99
        0x7CB8DC, 0x7CB8DC, // 0x9A, 0x9B
        0x90CCEC, 0x90CCEC, // 0x9C, 0x9D
        0xA4E0FC, 0xA4E0FC, // 0x9E, 0x9F

        // 0xA?
        0x580070, 0x580070, // 0xA0, 0xA1
        0x6C2088, 0x6C2088, // 0xA2, 0xA3
        0x803CA0, 0x803CA0, // 0xA4, 0xA5
        0x9458B4, 0x9458B4, // 0xA6, 0xA7
        0xA470C8, 0xA470C8, // 0xA8, 0xA9
        0xB484DC, 0xB484DC, // 0xAA, 0xAB
        0xC49CEC, 0xC49CEC, // 0xAC, 0xAD
        0xD4B0FC, 0xD4B0FC, // 0xAE, 0xAF

        // 0xB?
        0x002070, 0x002070, // 0xB0, 0xB1
        0x1C3C88, 0x1C3C88, // 0xB2, 0xB3
        0x3858A0, 0x3858A0, // 0xB4, 0xB5
        0x5074B4, 0x5074B4, // 0xB6, 0xB7
        0x6888C8, 0x6888C8, // 0xB8, 0xB9
        0x7CA0DC, 0x7CA0DC, // 0xBA, 0xBB
        0x90B4EC, 0x90B4EC, // 0xBC, 0xBD
        0xA4C8FC, 0xA4C8FC, // 0xBE, 0xBF

        // 0xC?
        0x3C0080, 0x3C0080, // 0xC0, 0xC1
        0x542094, 0x542094, // 0xC2, 0xC3
        0x6C3CA8, 0x6C3CA8, // 0xC4, 0xC5
        0x8058BC, 0x8058BC, // 0xC6, 0xC7
        0x9470CC, 0x9470CC, // 0xC8, 0xC9
        0xA884DC, 0xA884DC, // 0xCA, 0xCB
        0xB89CEC, 0xB89CEC, // 0xCC, 0xCD
        0xC8B0FC, 0xC8B0FC, // 0xCE, 0xCF

        // 0xD?
        0x000088, 0x000088, // 0xD0, 0xD1
        0x20209C, 0x20209C, // 0xD2, 0xD3
        0x3C3CB0, 0x3C3CB0, // 0xD4, 0xD5
        0x5858C0, 0x5858C0, // 0xD6, 0xD7
        0x7070D0, 0x7070D0, // 0xD8, 0xD9
        0x8484E0, 0x8484E0, // 0xDA, 0xDB
        0x9C9CEC, 0x9C9CEC, // 0xDC, 0xDD
        0xB0B0FC, 0xB0B0FC, // 0xDE, 0xDF

        // 0xE?
        0x000000, 0x000000, // 0xE0, 0xE1
        0x282828, 0x282828, // 0xE2, 0xE3
        0x505050, 0x505050, // 0xE4, 0xE5
        0x747474, 0x747474, // 0xE6, 0xE7
        0x949494, 0x949494, // 0xE8, 0xE9
        0xB4B4B4, 0xB4B4B4, // 0xEA, 0xEB
        0xD0D0D0, 0xD0D0D0, // 0xEC, 0xED
        0xECECEC, 0xECECEC, // 0xEE, 0xEF

        // 0xF?
        0x000000, 0x000000, // 0xF0, 0xF1
        0x282828, 0x282828, // 0xF2, 0xF3
        0x505050, 0x505050, // 0xF4, 0xF5
        0x747474, 0x747474, // 0xF6, 0xF7
        0x949494, 0x949494, // 0xF8, 0xF9
        0xB4B4B4, 0xB4B4B4, // 0xFA, 0xFB
        0xD0D0D0, 0xD0D0D0, // 0xFC, 0xFD
        0xECECEC, 0xECECEC  // 0xFE, 0xFF
    };

    // SECAM-COLORS
    public static final int SECAM[] =
    {
        // 0x0?
        0x000000, 0x000000, // 0x00, 0x01
        0x2121FF, 0x2121FF, // 0x02, 0x03
        0xF03C79, 0xF03C79, // 0x04, 0x05
        0xFF50FF, 0xFF50FF, // 0x06, 0x07
        0x7FFF00, 0x7FFF00, // 0x08, 0x09
        0x7FFFFF, 0x7FFFFF, // 0x0A, 0x0B
        0xFFFF3F, 0xFFFF3F, // 0x0C, 0x0D
        0xFFFFFF, 0xFFFFFF, // 0x0E, 0x0F

        // 0x1?
        0x000000, 0x000000, // 0x10, 0x11
        0x2121FF, 0x2121FF, // 0x12, 0x13
        0xF03C79, 0xF03C79, // 0x14, 0x15
        0xFF50FF, 0xFF50FF, // 0x16, 0x17
        0x7FFF00, 0x7FFF00, // 0x18, 0x19
        0x7FFFFF, 0x7FFFFF, // 0x1A, 0x1B
        0xFFFF3F, 0xFFFF3F, // 0x1C, 0x1D
        0xFFFFFF, 0xFFFFFF, // 0x1E, 0x1F

        // 0x2?
        0x000000, 0x000000, // 0x20, 0x21
        0x2121FF, 0x2121FF, // 0x22, 0x23
        0xF03C79, 0xF03C79, // 0x24, 0x25
        0xFF50FF, 0xFF50FF, // 0x26, 0x27
        0x7FFF00, 0x7FFF00, // 0x28, 0x29
        0x7FFFFF, 0x7FFFFF, // 0x2A, 0x2B
        0xFFFF3F, 0xFFFF3F, // 0x2C, 0x2D
        0xFFFFFF, 0xFFFFFF, // 0x2E, 0x2F

        // 0x3?
        0x000000, 0x000000, // 0x30, 0x31
        0x2121FF, 0x2121FF, // 0x32, 0x33
        0xF03C79, 0xF03C79, // 0x34, 0x35
        0xFF50FF, 0xFF50FF, // 0x36, 0x37
        0x7FFF00, 0x7FFF00, // 0x38, 0x39
        0x7FFFFF, 0x7FFFFF, // 0x3A, 0x3B
        0xFFFF3F, 0xFFFF3F, // 0x3C, 0x3D
        0xFFFFFF, 0xFFFFFF, // 0x3E, 0x3F

        // 0x4?
        0x000000, 0x000000, // 0x40, 0x41
        0x2121FF, 0x2121FF, // 0x42, 0x43
        0xF03C79, 0xF03C79, // 0x44, 0x45
        0xFF50FF, 0xFF50FF, // 0x46, 0x47
        0x7FFF00, 0x7FFF00, // 0x48, 0x49
        0x7FFFFF, 0x7FFFFF, // 0x4A, 0x4B
        0xFFFF3F, 0xFFFF3F, // 0x4C, 0x4D
        0xFFFFFF, 0xFFFFFF, // 0x4E, 0x4F

        // 0x5?
        0x000000, 0x000000, // 0x50, 0x51
        0x2121FF, 0x2121FF, // 0x52, 0x53
        0xF03C79, 0xF03C79, // 0x54, 0x55
        0xFF50FF, 0xFF50FF, // 0x56, 0x57
        0x7FFF00, 0x7FFF00, // 0x58, 0x59
        0x7FFFFF, 0x7FFFFF, // 0x5A, 0x5B
        0xFFFF3F, 0xFFFF3F, // 0x5C, 0x5D
        0xFFFFFF, 0xFFFFFF, // 0x5E, 0x5F

        // 0x6?
        0x000000, 0x000000, // 0x60, 0x61
        0x2121FF, 0x2121FF, // 0x62, 0x63
        0xF03C79, 0xF03C79, // 0x64, 0x65
        0xFF50FF, 0xFF50FF, // 0x66, 0x67
        0x7FFF00, 0x7FFF00, // 0x68, 0x69
        0x7FFFFF, 0x7FFFFF, // 0x6A, 0x6B
        0xFFFF3F, 0xFFFF3F, // 0x6C, 0x6D
        0xFFFFFF, 0xFFFFFF, // 0x6E, 0x6F

        // 0x7?
        0x000000, 0x000000, // 0x70, 0x71
        0x2121FF, 0x2121FF, // 0x72, 0x73
        0xF03C79, 0xF03C79, // 0x74, 0x75
        0xFF50FF, 0xFF50FF, // 0x76, 0x77
        0x7FFF00, 0x7FFF00, // 0x78, 0x79
        0x7FFFFF, 0x7FFFFF, // 0x7A, 0x7B
        0xFFFF3F, 0xFFFF3F, // 0x7C, 0x7D
        0xFFFFFF, 0xFFFFFF, // 0x7E, 0x7F

        // 0x8?
        0x000000, 0x000000, // 0x80, 0x81
        0x2121FF, 0x2121FF, // 0x82, 0x83
        0xF03C79, 0xF03C79, // 0x84, 0x85
        0xFF50FF, 0xFF50FF, // 0x86, 0x87
        0x7FFF00, 0x7FFF00, // 0x88, 0x89
        0x7FFFFF, 0x7FFFFF, // 0x8A, 0x8B
        0xFFFF3F, 0xFFFF3F, // 0x8C, 0x8D
        0xFFFFFF, 0xFFFFFF, // 0x8E, 0x8F

        // 0x9?
        0x000000, 0x000000, // 0x90, 0x91
        0x2121FF, 0x2121FF, // 0x92, 0x93
        0xF03C79, 0xF03C79, // 0x94, 0x95
        0xFF50FF, 0xFF50FF, // 0x96, 0x97
        0x7FFF00, 0x7FFF00, // 0x98, 0x99
        0x7FFFFF, 0x7FFFFF, // 0x9A, 0x9B
        0xFFFF3F, 0xFFFF3F, // 0x9C, 0x9D
        0xFFFFFF, 0xFFFFFF, // 0x9E, 0x9F

        // 0xA?
        0x000000, 0x000000, // 0xA0, 0xA1
        0x2121FF, 0x2121FF, // 0xA2, 0xA3
        0xF03C79, 0xF03C79, // 0xA4, 0xA5
        0xFF50FF, 0xFF50FF, // 0xA6, 0xA7
        0x7FFF00, 0x7FFF00, // 0xA8, 0xA9
        0x7FFFFF, 0x7FFFFF, // 0xAA, 0xAB
        0xFFFF3F, 0xFFFF3F, // 0xAC, 0xAD
        0xFFFFFF, 0xFFFFFF, // 0xAE, 0xAF

        // 0xB?
        0x000000, 0x000000, // 0xB0, 0xB1
        0x2121FF, 0x2121FF, // 0xB2, 0xB3
        0xF03C79, 0xF03C79, // 0xB4, 0xB5
        0xFF50FF, 0xFF50FF, // 0xB6, 0xB7
        0x7FFF00, 0x7FFF00, // 0xB8, 0xB9
        0x7FFFFF, 0x7FFFFF, // 0xBA, 0xBB
        0xFFFF3F, 0xFFFF3F, // 0xBC, 0xBD
        0xFFFFFF, 0xFFFFFF, // 0xBE, 0xBF

        // 0xC?
        0x000000, 0x000000, // 0xC0, 0xC1
        0x2121FF, 0x2121FF, // 0xC2, 0xC3
        0xF03C79, 0xF03C79, // 0xC4, 0xC5
        0xFF50FF, 0xFF50FF, // 0xC6, 0xC7
        0x7FFF00, 0x7FFF00, // 0xC8, 0xC9
        0x7FFFFF, 0x7FFFFF, // 0xCA, 0xCB
        0xFFFF3F, 0xFFFF3F, // 0xCC, 0xCD
        0xFFFFFF, 0xFFFFFF, // 0xCE, 0xCF

        // 0xD?
        0x000000, 0x000000, // 0xD0, 0xD1
        0x2121FF, 0x2121FF, // 0xD2, 0xD3
        0xF03C79, 0xF03C79, // 0xD4, 0xD5
        0xFF50FF, 0xFF50FF, // 0xD6, 0xD7
        0x7FFF00, 0x7FFF00, // 0xD8, 0xD9
        0x7FFFFF, 0x7FFFFF, // 0xDA, 0xDB
        0xFFFF3F, 0xFFFF3F, // 0xDC, 0xDD
        0xFFFFFF, 0xFFFFFF, // 0xDE, 0xDF

        // 0xE?
        0x000000, 0x000000, // 0xE0, 0xE1
        0x2121FF, 0x2121FF, // 0xE2, 0xE3
        0xF03C79, 0xF03C79, // 0xE4, 0xE5
        0xFF50FF, 0xFF50FF, // 0xE6, 0xE7
        0x7FFF00, 0x7FFF00, // 0xE8, 0xE9
        0x7FFFFF, 0x7FFFFF, // 0xEA, 0xEB
        0xFFFF3F, 0xFFFF3F, // 0xEC, 0xED
        0xFFFFFF, 0xFFFFFF, // 0xEE, 0xEF

        // 0xF?
        0x000000, 0x000000, // 0xF0, 0xF1
        0x2121FF, 0x2121FF, // 0xF2, 0xF3
        0xF03C79, 0xF03C79, // 0xF4, 0xF5
        0xFF50FF, 0xFF50FF, // 0xF6, 0xF7
        0x7FFF00, 0x7FFF00, // 0xF8, 0xF9
        0x7FFFFF, 0x7FFFFF, // 0xFA, 0xFB
        0xFFFF3F, 0xFFFF3F, // 0xFC, 0xFD
        0xFFFFFF, 0xFFFFFF  // 0xFE, 0xFF
    };

    public static final int getColorByVideoMode(VideoMode mode, int colorIndex, int luminanceIndex)
    {
        if (mode == VideoMode.NTSC) return getNTSC(colorIndex, luminanceIndex);
        else if (mode == VideoMode.PAL) return getPAL(colorIndex, luminanceIndex);
        else if (mode == VideoMode.SECAM) return getSECAM(colorIndex, luminanceIndex);

        return 0x000000;
    }

    public static final int getNTSC(int colorIndex, int luminanceIndex)
    {
        if (colorIndex > 15 || luminanceIndex > 15) return 0x000000; // just return black
        return NTSC[colorIndex * 16 + luminanceIndex];
    }

    public static final int getPAL(int colorIndex, int luminanceIndex)
    {
        if (colorIndex > 15 || luminanceIndex > 15) return 0x000000; // just return black
        return PAL[colorIndex * 16 + luminanceIndex];
    }

    public static final int getSECAM(int colorIndex, int luminanceIndex)
    {
        if (colorIndex > 15 || luminanceIndex > 15) return 0x000000; // just return black
        return SECAM[colorIndex * 16 + luminanceIndex];
    }
}